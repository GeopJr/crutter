crystal_doc_search_index_callback({"repository_name":"crutter","body":"<h1 align=\"center\">crutter</h1>\n<h4 align=\"center\">Create Flutter Widgets from Crystal.</h4>\n<p align=\"center\">\n  <br />\n    <a href=\"https://github.com/GeopJr/crutter/blob/main/CODE_OF_CONDUCT.md\"><img src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.1-08589c.svg?style=for-the-badge&labelColor=44d1fd\" alt=\"Code Of Conduct\" /></a>\n    <a href=\"https://github.com/GeopJr/crutter/blob/main/LICENSE\"><img src=\"https://img.shields.io/badge/LICENSE-BSD--2--Clause-08589c.svg?style=for-the-badge&labelColor=44d1fd\" alt=\"BSD-2-Clause\" /></a>\n    <a href=\"https://github.com/GeopJr/crutter/actions\"><img src=\"https://img.shields.io/github/workflow/status/geopjr/crutter/Specs%20&%20Lint/main?labelColor=44d1fd&style=for-the-badge\" alt=\"ci action status\" /></a>\n</p>\n\n## What is crutter?\n\nAs of now crutter is a POC.\n\nCrystal 1.4.0 introduced compiling to WASM. Dart has *minimal* support for consuming WASM right now.\n\ncrutter generates widgets in JSON format that are to be consumed by [json_dynamic_widget](https://github.com/peiffer-innovations/json_dynamic_widget), a Dart package that creates widgets dynamically from JSON.\n\njson_dynamic_widget has a lot of features like functions that exapand in Dart.\n\nSee [`./spec/`](./spec/).\n\n## Why is it a POC?\n\nDart's WASM support is *very* alpha. It uses wasmer and it's messy between platforms and SDK versions.\n\nEven after getting over those, it doesn't support all Crystal WASM functions (and honestly I'm unsure if it ever will).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     crutter:\n       github: GeopJr/crutter\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nYou can find crutter's docs on the sidebar.\n\nThe following code is just a concept, it's untested and depends on assumptions.\n\nWASM:\n\n```crystal\nrequire \"crutter\"\n\ndef create_text(title : String)\n  center = Crutter::Widget.new(\"center\")\n  text = Crutter::Widget.new(\"text\")\n\n  text.args[\"text\"] = title\n  center.children << text\n\n  center.to_json #=> {\"type\":\"center\",\"child\":{\"type\":\"text\",\"args\":{\"text\":\"#{title}\"}}}\nend\n```\n\nDart:\n\n```dart\nimport 'package:flutter/material.dart';\nimport 'package:flutter_wasm/flutter_wasm.dart';\nimport 'package:json_dynamic_widget/json_dynamic_widget.dart';\n\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  ByteData bytes = await rootBundle.load('crystal/main-final.wasm');\n  final data = bytes.buffer.asUint8List();\n  final mod = WasmModule(data);\n  final inst = mod.builder().build();\n  final create_text = inst.lookupFunction('create_text');\n\n  final text_widget = create_text(\"hello world\")\n  final json_data = json.decode(text_widget);\n\n  final json_widget_data = JsonWidgetData.fromDynamic(\n        json_data\n  );\n}\n```\n\n> Unsure whether the above even compiles but gets the point across:\n\n> Dart --create_text(\"hello world\")--> Crystal (WASM) --widget--> Dart\n\n## Contributing\n\n1. Read the [Code of Conduct](https://github.com/GeopJr/crutter/blob/main/CODE_OF_CONDUCT.md)\n2. Fork it (<https://github.com/GeopJr/crutter/fork>)\n3. Create your feature branch (`git checkout -b my-new-feature`)\n4. Commit your changes (`git commit -am 'Add some feature'`)\n5. Push to the branch (`git push origin my-new-feature`)\n6. Create a new Pull Request\n","program":{"html_id":"crutter/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"crutter","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"crutter/Crutter","path":"Crutter.html","kind":"module","full_name":"Crutter","name":"Crutter","abstract":false,"locations":[{"filename":"src/crutter.cr","line_number":3,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L3"}],"repository_name":"crutter","program":false,"enum":false,"alias":false,"const":false,"types":[{"html_id":"crutter/Crutter/Widget","path":"Crutter/Widget.html","kind":"class","full_name":"Crutter::Widget","name":"Widget","abstract":false,"superclass":{"html_id":"crutter/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crutter/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crutter/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crutter.cr","line_number":4,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L4"}],"repository_name":"crutter","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"crutter/Crutter","kind":"module","full_name":"Crutter","name":"Crutter"},"constructors":[{"html_id":"new(type:String)-class-method","name":"new","doc":"*type* is a Flutter Widget type (eg scaffold)","summary":"<p><em>type</em> is a Flutter Widget type (eg scaffold)</p>","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"String"}],"args_string":"(type : String)","args_html":"(type : String)","location":{"filename":"src/crutter.cr","line_number":6,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L6"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"args:Hash(String,Crutter::Widget|String)-instance-method","name":"args","doc":"Widget args\n\nExample:\n```Dart\nContainer(\n  height: 56.0, // <- this is an arg\n  child: ...\n);\n```\nWARNING: Above code is in Dart","summary":"<p>Widget args</p>","abstract":false,"location":{"filename":"src/crutter.cr","line_number":23,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L23"},"def":{"name":"args","return_type":"Hash(String, Crutter::Widget | String)","visibility":"Public","body":"@args"}},{"html_id":"children:Array(Crutter::Widget)-instance-method","name":"children","doc":"Widget children.\n\nIf only one child is provided then instead of \"children\" (`Array(Crutter::Widget)`) it becomes \"child\" (`Crutter::Widget`).\n\nExample:\n```Dart\nContainer(\n  ...\n  child: Center(...)\n);\n```\nWARNING: Above code is in Dart","summary":"<p>Widget children.</p>","abstract":false,"location":{"filename":"src/crutter.cr","line_number":39,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L39"},"def":{"name":"children","return_type":"Array(Crutter::Widget)","visibility":"Public","body":"@children"}},{"html_id":"listen:Array(String)-instance-method","name":"listen","abstract":false,"location":{"filename":"src/crutter.cr","line_number":43,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L43"},"def":{"name":"listen","return_type":"Array(String)","visibility":"Public","body":"@listen"}},{"html_id":"to_h:Hash(String,String|Array(String)|Crutter::Widget|Nil|Array(Crutter::Widget)|Hash(String,Crutter::Widget|String))-instance-method","name":"to_h","doc":"Widget to Hash","summary":"<p>Widget to Hash</p>","abstract":false,"location":{"filename":"src/crutter.cr","line_number":48,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L48"},"def":{"name":"to_h","return_type":"Hash(String, String | Array(String) | Crutter::Widget | Nil | Array(Crutter::Widget) | Hash(String, Crutter::Widget | String))","visibility":"Public","body":"result = Hash(String, String | Array(String) | Crutter::Widget | Nil | Array(Crutter::Widget) | Hash(String, Crutter::Widget | String)).new\nresult[\"type\"] = @type\nif @args.size == 0\nelse\n  result[\"args\"] = @args\nend\nif @listen.size == 0\nelse\n  result[\"listen\"] = @listen\nend\nchildren_size = @children.size\nif children_size == 0\nelse\n  if children_size == 1\n    result[\"child\"] = @children.first?\n  else\n    result[\"children\"] = @children\n  end\nend\nresult\n"}},{"html_id":"to_json:String-instance-method","name":"to_json","doc":"Widget to JSON","summary":"<p>Widget to JSON</p>","abstract":false,"location":{"filename":"src/crutter.cr","line_number":72,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L72"},"def":{"name":"to_json","return_type":"String","visibility":"Public","body":"self.to_h.to_json"}},{"html_id":"to_pretty_json:String-instance-method","name":"to_pretty_json","doc":"Widget to pretty JSON","summary":"<p>Widget to pretty JSON</p>","abstract":false,"location":{"filename":"src/crutter.cr","line_number":77,"url":"https://github.com/GeopJr/crutter/blob/4e5f39dbf633326f7d31cd716cf2ec40728dfad8/src/crutter.cr#L77"},"def":{"name":"to_pretty_json","return_type":"String","visibility":"Public","body":"self.to_h.to_pretty_json"}}]}]}]}})